version: "3.9"

services:
  app:
    build: .
    network_mode: "host"
    ports:
      - "8000:8000"
    environment:
      DATABASE_URL: mysql+pymysql://root:mysql1234@127.0.0.1:3306/test2
    depends_on:
      - cloudsql-proxy
    volumes:
      - /home/ubuntu/app/src/logs:/app/src/logs
      - /home/ubuntu/app/src/EasyOCR/model/craft_mlt_25k.pth:/root/.EasyOCR/model/craft_mlt_25k.pth
      - /home/ubuntu/app/src/EasyOCR/model/english_g2.pth:/root/.EasyOCR/model/english_g2.pth

  cloudsql-proxy:
    image: gcr.io/cloudsql-docker/gce-proxy:latest
    container_name: cloudsql-proxy
    restart: always
    network_mode: "host"
    command: /cloud_sql_proxy -instances=servertest-425513:us-central1:mysql-test=tcp:3306 -credential_file=/secrets/cloudsql/credentials.json
    volumes:
      - /home/ubuntu/app/servertest-425513-ab5dd4787884.json:/secrets/cloudsql/credentials.json
    ports:
      - "3306:3306"
    healthcheck:
      test: ["CMD", "nc", "-z", "127.0.0.1", "3306"]
      interval: 10s
      timeout: 5s
      retries: 5
    
  nginx:
    restart: unless-stopped
    image: nginx
    container_name: nginx
    ports:
      - "80:80"   
    # - "443:443"
    # environment:
    #   - CERTBOT_EMAIL=youremail@gmail.com
    volumes:
      - /home/ubuntu/app/nginx/nginx.conf:/etc/nginx/nginx.conf
      # - letsencrypt:/etc/letsencrypt
    depends_on:
      - app
    logging:
      driver: "json-file"
      options:
        max-size: "100k"
        max-file: "1"
        
  redis:
    image: redis:latest
    container_name: redis-server
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.13.3
    container_name: elasticsearch
    environment:
      - node.name=elasticsearch
      - discovery.type=single-node
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - esdata:/usr/share/elasticsearch/data
    ports:
      - "9200:9200"

  logstash:
    image: docker.elastic.co/logstash/logstash:7.13.3
    container_name: logstash
    volumes:
      - ./logstash/pipeline:/usr/share/logstash/pipeline
      - /home/ubuntu/app/src/logs/fastapi-efk.log:/usr/share/logstash/logfile.log
    ports:
      - "5044:5044"
    depends_on:
      - elasticsearch

  kibana:
    image: docker.elastic.co/kibana/kibana:7.13.3
    container_name: kibana
    ports:
      - "5601:5601"
    volumes:
      - ./kibana/config/kibana.yml:/usr/share/kibana/config/kibana.yml
    depends_on:
      - elasticsearch

volumes:
  redis-data:
  esdata: